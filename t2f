#!/usr/bin/python

### Twitter to Facebook
### http://dev.twitter.com/doc

import twitter_utils

import os
import sys
conf = twitter_utils.Conf(
 os.path.join(os.path.dirname(sys.argv[0]), 't2f.conf') )
(uid, last_sid, archpath_template, toffset,) = conf.read()

try:
  stats = twitter_utils.get_statuses(uid)
except:
  conf.increment_failure()
  import sys
  sys.exit(0)

def fbpost(url, repurl, text, created_at, dic):
  import urllib
  import json
  import fauthinfo
  import re
  ## User - Facebook https://developers.facebook.com/docs/reference/api/user/
  url = 'https://graph.facebook.com/%d/feed' % (fauthinfo.uid,)
  values = {
    'access_token': fauthinfo.access_token,
    'message': text.encode('UTF-8'),
  }
  if len(dic.values()) > 0:
    values["link"] = dic.values()[0];
  data = urllib.urlencode(values)
  input = urllib.urlopen(url, data)
  lines = input.readlines()
  d = json.loads(''.join(lines))
  if d.has_key(u'error'):
    raise BaseException, "Facebook error " + str(d)

text_save = ""
dic_save = {}

for stat in stats:
  sid = stat['id'] # Stat ID
  if sid <= last_sid: # Skip stats already read
    continue
  (url, repurl, text,) = twitter_utils.format_fields(stat)
  (text, dic,) = twitter_utils.expand_urls_in_text(text)
  text = text.strip()
  if len(text) == 0:
    continue
  if text[0] == "@":
    continue
  if text[0] == "#":
    continue
  if text[-1] == "\\":
    text_save = text_save + "" + text[:-1].strip()
    if not dic_save:
      dic_save = dic
    continue
  elif text_save:
    text = text_save + "" + text
    dic = dic_save
  fbpost(url, repurl, text, stat['created_at'], dic)
  text_save = ""
  dic_save = {}
  last_sid = sid
  conf.update_last_sid(last_sid)
